service: dictionary-api

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  dictionaryTable:
    name: ${self:custom.stage}-dictionary
    throughputs:
      prod: 5
      default: 1
    throughput: ${self:custom.dictionaryTable.throughputs.${self:custom.stage}, self:custom.dictionaryTable.throughputs.default}
  termsTable:
    name: ${self:custom.stage}-terms
    throughputs:
      prod: 5
      default: 1
    throughput: ${self:custom.termsTable.throughputs.${self:custom.stage}, self:custom.termsTable.throughputs.default}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

resources:
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-2
  environment:
    dictionaryTableName: ${self:custom.dictionaryTable.name}
    termsTableName: ${self:custom.termsTable.name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - 'Fn::GetAtt': [ DictionaryTable, Arn ]
        - 'Fn::GetAtt': [ TermsTable, Arn ]

functions:
  dictionary-get:
    handler: api/dictionary/index.get
    events:
      - http:
          path: dictionary/{id}
          method: get
          cors: true
  dictionary-list:
    handler: api/dictionary/index.list
    events:
      - http:
          path: dictionary
          method: get
          cors: true
  dictionary-create:
    handler: api/dictionary/index.create
    events:
      - http:
          path: dictionary
          method: post
          cors: true
          authorizer: aws_iam
  dictionary-update:
    handler: api/dictionary/index.update
    events:
      - http:
          path: dictionary/{id}
          method: put
          cors: true
          authorizer: aws_iam
  dictionary-delete:
    handler: api/dictionary/index.delete
    events:
      - http:
          path: dictionary/{id}
          method: delete
          cors: true
          authorizer: aws_iam
