import {
  attribute,
  autoGeneratedHashKey,
  table,
} from '@aws/dynamodb-data-mapper-annotations'

@table(process.env.termTableName)
export default class TermModel {
  @autoGeneratedHashKey()
  id

  @attribute({type: 'String'})
  dictionaryId

  @attribute({type: 'String'})
  parent

  @attribute({type: 'String'})
  term

  @attribute({type: 'String'})
  fullTerm

  @attribute({type: 'Set', memberType: 'String'})
  synonyms

  @attribute({type: 'Set', memberType: 'String'})
  childrens

  get normalized() {
    const normalized = {
      id: this.id,
      dictionaryId: this.dictionaryId,
      parent: this.parent,
      term: this.term,
      fullTerm: this.fullTerm,
    }

    // Transform Set to Array for http-response
    if (this.childrens) normalized.childrens = Array.from(this.childrens)
    if (this.synonyms) normalized.synonyms = Array.from(this.synonyms)

    return normalized
  }
}
